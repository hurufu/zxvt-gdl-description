(player red)
(max_row 3)
(max_col 3)
(max_stack 1)
(role random)
(role red)
(<= (input ?P noop) (role ?P))
(<= (input ?P (move ?NumberOfPawns (from ?From) (to ?To))) (player ?P) (stack ?NumberOfPawns) (neighboring_coordinates ?From ?To))
(<= (input random (roll ?L)) (stack ?M) (roll_d6 ?M ?L))
(<= (base ?Cell) (valid_cell ?Cell))
(<= (base (control ?R)) (role ?R))
(init (cell (rc 1 1) (captured_by red) (with_pawn (of red) (number 1))))
(init (cell (rc 1 2) wild free))
(init (cell (rc 1 3) wild free))
(init (cell (rc 2 1) wild free))
(init (cell (rc 2 2) wild free))
(init (cell (rc 2 3) wild free))
(init (cell (rc 3 1) wild free))
(init (cell (rc 3 2) wild free))
(init (cell (rc 3 3) wild free))
(init (control red))
(<= (legal random (roll ?L)) (stack ?M) (roll_d6 ?M ?L) (true (control random)))
(<= (legal random noop) (player ?Player) (true (control ?Player)))
(<= (legal ?Player noop) (player ?Player) (true (control random)))
(<= (legal ?Player (move ?MovingPawns (from ?From) (to ?To))) (player ?Player) (neighboring_coordinates ?From ?To) (stack ?MovingPawns) (le ?MovingPawns ?StationaryPawns) (true (control ?Player)) (true (cell ?From (captured_by ?Player) (with_pawn (of ?Player) (number ?StationaryPawns)))))
(goal random 0)
(<= (goal ?Player ?Score) (player ?Player) (player_score ?Player ?Score))
(<= terminal (player ?Player) (true_for_each_cell (captured_by ?Player)))
(<= (next ?Cell) (player ?Player) (does random ?_1) (does ?Player noop) (true ?Cell))
(<= (next (cell ?To (captured_by ?Player) (with_pawn (of ?Player) (number ?MovingPawns)))) (player ?Player) (does random ?_2) (does ?Player (move ?MovingPawns (from ?_3) (to ?To))) (true (cell ?To ?_4 ?_5)))
(<= (next (cell ?From ?OldCapture free)) (player ?Player) (does random ?_6) (does ?Player (move ?_7 (from ?From) (to ?_8))) (true (cell ?From ?OldCapture ?_9)))
(<= (next (cell ?Rc ?OldCapture ?OldPawnState)) (player ?Player) (does random ?_10) (does ?Player (move ?_11 (from ?From) (to ?To))) (true (cell ?Rc ?OldCapture ?OldPawnState)) (distinct ?Rc ?From) (distinct ?Rc ?To))
(<= (next (control ?Player)) (player ?Player) (true (control ?Player)))
(<= (player_score ?Player 100) (true_for_each_cell (captured_by ?Player)))
(<= (player_score ?Player 50) (true (cell ?_12 wild ?_13)) (true (cell ?_14 (captured_by ?Player) ?_15)))
(<= (player_score ?Player 0) (player ?Player) (true_for_each_cell wild))
(<= (true_for_each_cell ?Capture) (true (cell (rc 1 1) ?Capture ?_16)) (true (cell (rc 1 2) ?Capture ?_17)) (true (cell (rc 1 3) ?Capture ?_18)) (true (cell (rc 2 1) ?Capture ?_19)) (true (cell (rc 2 2) ?Capture ?_20)) (true (cell (rc 2 3) ?Capture ?_21)) (true (cell (rc 3 1) ?Capture ?_22)) (true (cell (rc 3 2) ?Capture ?_23)) (true (cell (rc 3 3) ?Capture ?_24)))
(<= (row ?I) (max_row ?MaxRow) (le 1 ?I) (le ?I ?MaxRow))
(<= (col ?I) (max_col ?MaxCol) (le 1 ?I) (le ?I ?MaxCol))
(<= (stack ?PossiblePawnStack) (max_stack ?MaxStack) (le 1 ?PossiblePawnStack) (le ?PossiblePawnStack ?MaxStack))
(<= (neighboring_coordinates ?A ?B) (coordinates ?A) (coordinates ?B) (neighboring_coordinates_aux ?A ?B))
(<= (neighboring_coordinates_aux (rc ?R ?Lc) (rc ?R ?Rc)) (s ?R ?_25) (s ?Lc ?Rc))
(<= (neighboring_coordinates_aux (rc ?R ?Lc) (rc ?R ?Rc)) (s ?R ?_26) (s ?Rc ?Lc))
(<= (neighboring_coordinates_aux (rc ?Lr ?C) (rc ?Rr ?C)) (s ?C ?_27) (s ?Lr ?Rr))
(<= (neighboring_coordinates_aux (rc ?Lr ?C) (rc ?Rr ?C)) (s ?C ?_28) (s ?Rr ?Lr))
(roll_d6 0 nil)
(<= (roll_d6 1 (cons ?R1 nil)) (d6 ?R1))
(<= (roll_d6 2 (cons ?R1 (cons ?R2 nil))) (d6 ?R1) (d6 ?R2))
(<= (roll_d6 3 (cons ?R1 (cons ?R2 (cons ?R3 nil)))) (d6 ?R1) (d6 ?R2) (d6 ?R3))
(<= (roll_d6 4 (cons ?R1 (cons ?R2 (cons ?R3 (cons ?R4 nil))))) (d6 ?R1) (d6 ?R2) (d6 ?R3) (d6 ?R4))
(<= (valid_cell (cell ?Coordinates ?Type ?WithPawn)) (coordinates ?Coordinates) (cell_type ?Type) (valid_pawn ?WithPawn))
(<= (coordinates (rc ?Row ?Column)) (row ?Row) (col ?Column))
(cell_type wild)
(<= (cell_type (captured_by ?Player)) (player ?Player))
(valid_pawn free)
(<= (valid_pawn (with_pawn (of ?Player) (number ?Number))) (player ?Player) (stack ?Number))
(<= (d6 ?V) (le 1 ?V) (le ?V 6))
(<= (le ?A ?B) (s ?B ?_29) (s ?A ?X) (le ?X ?B))
(<= (le ?A ?A) (s ?A ?_30))
(s 0 1)
(s 1 2)
(s 2 3)
(s 3 4)
(s 4 5)
(s 5 6)
(s 6 7)
(s 7 8)
